
public class oc14_234 {

	private class ListNode{
		int val;
		ListNode next;
		public ListNode(int val){
			this.val = val;
		}
	}
	
	public static void main(String[] args){
		// test goes here
	}
	
    public boolean isPalindrome(ListNode head) {
        if(head==null)
        	return false;
        if(head.next==null)
        	return true;
        
        // find the mid point of the list
        ListNode tail = head;
        ListNode mid = head;
        ListNode midLeft = mid;
        ListNode midRight = mid;
        while(tail.next.next!=null){
        	tail = tail.next.next;
        	mid = mid.next;
        }
        if(tail.next != null){			// if list node total number is even 
        	tail = tail.next;
        	midLeft = mid;
        	midRight = mid.next;
        }
        else{
        	midLeft = mid;
        	midRight = mid;
        }
        
        // reverse the 2nd half of the list
        ListNode cur = midRight;
        if(cur.next.next==null)			// 2 elems in the right half
        	cur.next.next = cur;
        if(cur.next!=null){				// >=3 elems in the right half
        	cur = cur.next;
        	ListNode preCur = midRight;
            ListNode nextCur = midRight;
        }
        while(cur.next!=null){
        	nextCur = cur.next;
        	cur.next = preCur;
        	
        }
        
    }
}
