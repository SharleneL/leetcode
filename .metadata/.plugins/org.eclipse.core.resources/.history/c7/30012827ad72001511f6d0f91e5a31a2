/*
 * Sort a linked list using insertion sort
 * */
public class oct14_147 {

	public static class ListNode{
		int val;
		ListNode next;
		public ListNode(int val){
			this.val = val;
		}
	}
	
	public static void main(String[] args){
		// test goes here
	}
	
	public ListNode insertionSortList(ListNode head) {
		if(head==null || head.next==null)
			return head;
		ListNode elem = head;	// the elem to be inserted
		while(elem!=null){		// insert one elem in one round; stop when all elems are inserted
			if(head.val > elem.val){		// if the elem should be inserted as the head
				ListNode tmp = head;
				head = elem;
				head.next = tmp;
				continue;
			}
			
			ListNode cur = head;			// if the elem should be inserted after the heads
			while(cur!=elem){
				if(cur.val<elem.val && cur.next.val>=elem.val){
					ListNode tmp = cur;
					tmp.next = cur.next.next;
					cur.next = tmp;
					cur = cur.next;
					continue;
				}
				cur = cur.next;
			}
		}
    }
}
